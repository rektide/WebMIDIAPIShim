{"version":3,"sources":["../../src/util/store.js"],"names":["idIndex","Store","store","_keys","Symbol","iterator","obj","id","Date","getTime","push","indexOf","index","splice","elements","l","length","i","element","cb"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAIA,UAAU,CAAd;;IAEqBC,K;AACjB,qBAAc;AAAA;;AACV,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,KAAL,GAAa,EAAb;AACH;;;;+BACK;AACF,mBAAO,KAAKA,KAAL,CAAWC,OAAOC,QAAlB,GAAP;AACH;;;4BACGC,G,EAAK;AACL,gBAAMC,UAAQ,IAAIC,IAAJ,GAAWC,OAAX,EAAR,GAA+BT,OAArC;AACAA,uBAAW,CAAX;AACA,iBAAKG,KAAL,CAAWO,IAAX,CAAgBH,EAAhB;AACA,iBAAKL,KAAL,CAAWK,EAAX,IAAiBD,GAAjB;AACH;;;4BACGC,E,EAAID,G,EAAK;AACT,iBAAKH,KAAL,CAAWO,IAAX,CAAgBH,EAAhB;AACA,iBAAKL,KAAL,CAAWK,EAAX,IAAiBD,GAAjB;AACA,mBAAO,IAAP;AACH;;;4BACGC,E,EAAI;AACJ,mBAAO,KAAKL,KAAL,CAAWK,EAAX,CAAP;AACH;;;4BACGA,E,EAAI;AACJ,mBAAO,KAAKJ,KAAL,CAAWQ,OAAX,CAAmBJ,EAAnB,MAA2B,CAAC,CAAnC;AACH;;;gCACMA,E,EAAI;AACP,mBAAO,KAAKL,KAAL,CAAWK,EAAX,CAAP;AACA,gBAAMK,QAAQ,KAAKT,KAAL,CAAWQ,OAAX,CAAmBJ,EAAnB,CAAd;AACA,gBAAIK,QAAQ,CAAC,CAAb,EAAgB;AACZ,qBAAKT,KAAL,CAAWU,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACH;AACD,mBAAO,IAAP;AACH;;;iCACQ;AACL,gBAAME,WAAW,EAAjB;AACA,gBAAMC,IAAI,KAAKZ,KAAL,CAAWa,MAArB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,KAAK,CAA5B,EAA+B;AAC3B,oBAAMC,UAAU,KAAKhB,KAAL,CAAW,KAAKC,KAAL,CAAWc,CAAX,CAAX,CAAhB;AACAH,yBAASJ,IAAT,CAAcQ,OAAd;AACH;AACD,mBAAOJ,QAAP;AACH;;;gCACOK,E,EAAI;AACR,gBAAMJ,IAAI,KAAKZ,KAAL,CAAWa,MAArB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,KAAK,CAA5B,EAA+B;AAC3B,oBAAMC,UAAU,KAAKhB,KAAL,CAAW,KAAKC,KAAL,CAAWc,CAAX,CAAX,CAAhB;AACAE,mBAAGD,OAAH;AACH;AACJ;;;gCACO;AACJ,iBAAKf,KAAL,GAAa,EAAb;AACA,iBAAKD,KAAL,GAAa,EAAb;AACH;;;;;;kBApDgBD,K","file":"store.js","sourcesContent":["// es5 implementation of both Map and Set\n\nlet idIndex = 0;\n\nexport default class Store {\n    constructor() {\n        this.store = {};\n        this._keys = [];\n    }\n    keys(){\n        return this._keys[Symbol.iterator]()\n    }\n    add(obj) {\n        const id = `${new Date().getTime()}${idIndex}`;\n        idIndex += 1;\n        this._keys.push(id);\n        this.store[id] = obj;\n    }\n    set(id, obj) {\n        this._keys.push(id);\n        this.store[id] = obj;\n        return this;\n    }\n    get(id) {\n        return this.store[id];\n    }\n    has(id) {\n        return this._keys.indexOf(id) !== -1;\n    }\n    delete(id) {\n        delete this.store[id];\n        const index = this._keys.indexOf(id);\n        if (index > -1) {\n            this._keys.splice(index, 1);\n        }\n        return this;\n    }\n    values() {\n        const elements = [];\n        const l = this._keys.length;\n        for (let i = 0; i < l; i += 1) {\n            const element = this.store[this._keys[i]];\n            elements.push(element);\n        }\n        return elements;\n    }\n    forEach(cb) {\n        const l = this._keys.length;\n        for (let i = 0; i < l; i += 1) {\n            const element = this.store[this._keys[i]];\n            cb(element);\n        }\n    }\n    clear() {\n        this._keys = [];\n        this.store = {};\n    }\n}\n"]}